---
interface Props {
  title: string;
}

const { title } = Astro.props;
const currentPath = Astro.url.pathname;

---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body class="max-w-6xl mx-auto px-6 py-4 bg-amber-50 dark:bg-neutral-800">
    <!-- Theme toggle button -->
    <div class="fixed top-4 right-4 z-50">
      <button id="theme-toggle" aria-label="Toggle dark mode" class="p-2 bg-neutral-100 dark:bg-neutral-800 rounded-full shadow-md transition-all hover:scale-110">
        <!-- Sun icon (shown in dark mode) -->
        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 dark:block hidden text-yellow-500" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z" />
        </svg>
        <!-- Moon icon (shown in light mode) -->
        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 dark:hidden block text-neutral-700" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z" />
        </svg>
      </button>
    </div>
    
    <div class="md:flex md:justify-center md:items-start md:mt-16 lg:mt-30 transition-all">
      <aside class="self-start md:sticky md:top-12 overflow-visible">
        <nav class="flex flex-col items-center md:items-center w-full group md:block mb-12 md:mb-0" aria-label="navigation">
          <a href="/" class="flex justify-center md:justify-center w-full md:w-full md:mb-8">
            <img src="/myprofilepic.png" alt="Nahome Hagos" class="rounded-full hover:rotate-12 duration-500 transition-all h-16 w-16 md:h-32 md:w-32 object-cover border-2 border-neutral-200 dark:border-neutral-700 shadow-md" />
          </a>
          <div class="w-full text-center md:text-center md:mt-4 opacity-[75%] group-hover:opacity-100 transition-all duration-300">
            <div class="md:text-center">
              <ul class="flex md:flex-col gap-4 md:gap-2 justify-center items-center">
                <li class="font-medium text-neutral-400 dark:text-neutral-400 hover:!text-neutral-800 hover:dark:!text-neutral-100 transition-all">
                  <a href="/about" class={currentPath === '/about' ? 'active' : ''}><span>About</span></a>
                </li>
                <li class="font-medium text-neutral-400 dark:text-neutral-400 hover:!text-neutral-800 hover:dark:!text-neutral-100 transition-all">
                  <a href="/blog" class={currentPath === '/blog' ? 'active' : ''}><span>Blog</span></a>
                </li>
                <li class="font-medium text-neutral-400 dark:text-neutral-400 hover:!text-neutral-800 hover:dark:!text-neutral-100 transition-all">
                  <a href="/projects" class={currentPath === '/projects' ? 'active' : ''}><span>Projects</span></a>
                </li>
                <li class="font-medium text-neutral-400 dark:text-neutral-400 hover:!text-neutral-800 hover:dark:!text-neutral-100 transition-all">
                  <a href="/contact" class={currentPath === '/contact' ? 'active' : ''}><span>Contact</span></a>
                </li>
              </ul>
            </div>
          </div>
        </nav>
      </aside>
      <main class="w-full min-w-0 md:min-w-xl md:max-w-xl md:mx-auto md:ml-20 md:mr-8 fade-in">
        <slot />
      </main>
    </div>

    <!-- Theme toggle script -->
    <script is:inline>
      // Function to set the theme
      function setTheme(darkMode) {
        if (darkMode) {
          document.documentElement.classList.add('dark');
          localStorage.setItem('theme', 'dark');
        } else {
          document.documentElement.classList.remove('dark');
          localStorage.setItem('theme', 'light');
        }
        
        // Dispatch an event that the theme has changed
        document.dispatchEvent(new CustomEvent('themeChanged', { 
          detail: { isDark: darkMode } 
        }));
      }

      // Initialize theme based on:
      // 1. localStorage preference
      // 2. System preference
      const savedTheme = localStorage.getItem('theme');
      if (savedTheme === 'dark') {
        setTheme(true);
      } else if (savedTheme === 'light') {
        setTheme(false);
      } else {
        // Use system preference
        const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
        setTheme(prefersDark);
      }

      // Add event listener for toggle button
      document.addEventListener('DOMContentLoaded', () => {
        const themeToggle = document.getElementById('theme-toggle');
        if (themeToggle) {
          themeToggle.addEventListener('click', () => {
            const isDark = document.documentElement.classList.contains('dark');
            setTheme(!isDark);
          });
        }
      });
    </script>
  </body>
</html>

<style>
  nav a {
    text-decoration: none;
    color: #333; /* Darker gray for light mode */
  }
  
  html.dark nav a {
    color: #ccc; /* Lighter gray for dark mode */
  }

  nav a:hover {
    color: #000; /* Black for light mode hover */
  }

  html.dark nav a:hover {
    color: #fff; /* White for dark mode hover */
  }

  nav a.active {
    font-weight: 700; /* Slightly bolder font */
    color: black;
    transition: color 0.3s ease; /* Smooth transition */
  }

  html.dark nav a.active {
    color: #fff;
  }

  @keyframes fadeIn {
    0% { opacity: 0; }
    100% { opacity: 1; }
  }
  
  .fade-in {
    animation: fadeIn 0.5s ease-in;
  }

  /* Add dark mode detection */
  html {
    color-scheme: light dark;
    color: #333; /* Default text color for light mode */
  }

  html.dark {
    color-scheme: dark;
    color: #fff; /* White text in dark mode */
  }
</style> 